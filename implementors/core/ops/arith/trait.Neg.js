(function() {var implementors = {
"haar_lib":[["impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&lt;Output = T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"enum\" href=\"haar_lib/num/num_inf/enum.NumInf.html\" title=\"enum haar_lib::num::num_inf::NumInf\">NumInf</a>&lt;T&gt;"],["impl&lt;Modulo: <a class=\"trait\" href=\"haar_lib/num/ff/trait.FF.html\" title=\"trait haar_lib::num::ff::FF\">FF</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"haar_lib/linalg/square_matrix/struct.SquareMatrix.html\" title=\"struct haar_lib::linalg::square_matrix::SquareMatrix\">SquareMatrix</a>&lt;Modulo&gt;<span class=\"where fmt-newline\">where\n    Modulo::<a class=\"associatedtype\" href=\"haar_lib/num/ff/trait.FF.html#associatedtype.Output\" title=\"type haar_lib::num::ff::FF::Output\">Output</a>: <a class=\"trait\" href=\"haar_lib/num/ff/trait.FFElem.html\" title=\"trait haar_lib::num::ff::FFElem\">FFElem</a>,</span>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"haar_lib/num/total_f64/struct.Totalf64.html\" title=\"struct haar_lib::num::total_f64::Totalf64\">Totalf64</a>"],["impl&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.70.0/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;M&gt;"],["impl&lt;Modulo: <a class=\"trait\" href=\"haar_lib/num/ff/trait.FF.html\" title=\"trait haar_lib::num::ff::FF\">FF</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"haar_lib/linalg/matrix/struct.Matrix.html\" title=\"struct haar_lib::linalg::matrix::Matrix\">Matrix</a>&lt;Modulo&gt;<span class=\"where fmt-newline\">where\n    Modulo::<a class=\"associatedtype\" href=\"haar_lib/num/ff/trait.FF.html#associatedtype.Output\" title=\"type haar_lib::num::ff::FF::Output\">Output</a>: <a class=\"trait\" href=\"haar_lib/num/ff/trait.FFElem.html\" title=\"trait haar_lib::num::ff::FFElem\">FFElem</a>,</span>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"haar_lib/math/rational/struct.Rational.html\" title=\"struct haar_lib::math::rational::Rational\">Rational</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"haar_lib/num/modint/struct.ModInt.html\" title=\"struct haar_lib::num::modint::ModInt\">ModInt</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()