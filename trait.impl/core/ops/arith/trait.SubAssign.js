(function() {
    var implementors = Object.fromEntries([["haar_lib",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/num/complex/struct.Complex.html\" title=\"struct haar_lib::num::complex::Complex\">Complex</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/num/gaussian_int/struct.GaussianInt.html\" title=\"struct haar_lib::num::gaussian_int::GaussianInt\">GaussianInt</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/num/modint/struct.ModInt.html\" title=\"struct haar_lib::num::modint::ModInt\">ModInt</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/num/montgomery/struct.Montgomery.html\" title=\"struct haar_lib::num::montgomery::Montgomery\">Montgomery</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/num/rational/struct.Rational.html\" title=\"struct haar_lib::num::rational::Rational\">Rational</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/num/total_f64/struct.Totalf64.html\" title=\"struct haar_lib::num::total_f64::Totalf64\">Totalf64</a>"],["impl&lt;Modulo: <a class=\"trait\" href=\"haar_lib/num/ff/trait.FF.html\" title=\"trait haar_lib::num::ff::FF\">FF</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/linalg/mod_m/matrix/struct.Matrix.html\" title=\"struct haar_lib::linalg::mod_m::matrix::Matrix\">Matrix</a>&lt;Modulo&gt;<div class=\"where\">where\n    Modulo::<a class=\"associatedtype\" href=\"haar_lib/num/ff/trait.FF.html#associatedtype.Element\" title=\"type haar_lib::num::ff::FF::Element\">Element</a>: <a class=\"trait\" href=\"haar_lib/num/ff/trait.FFElem.html\" title=\"trait haar_lib::num::ff::FFElem\">FFElem</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div>"],["impl&lt;Modulo: <a class=\"trait\" href=\"haar_lib/num/ff/trait.FF.html\" title=\"trait haar_lib::num::ff::FF\">FF</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/linalg/mod_m/square_matrix/struct.SquareMatrix.html\" title=\"struct haar_lib::linalg::mod_m::square_matrix::SquareMatrix\">SquareMatrix</a>&lt;Modulo&gt;<div class=\"where\">where\n    Modulo::<a class=\"associatedtype\" href=\"haar_lib/num/ff/trait.FF.html#associatedtype.Element\" title=\"type haar_lib::num::ff::FF::Element\">Element</a>: <a class=\"trait\" href=\"haar_lib/num/ff/trait.FFElem.html\" title=\"trait haar_lib::num::ff::FFElem\">FFElem</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div>"],["impl&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;M&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[4106]}