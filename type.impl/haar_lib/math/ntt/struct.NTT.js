(function() {
    var type_impls = Object.fromEntries([["haar_lib",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-NTT%3CP,+PRIM_ROOT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#145-149\">Source</a><a href=\"#impl-Default-for-NTT%3CP,+PRIM_ROOT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const P: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>, const PRIM_ROOT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"haar_lib/math/ntt/struct.NTT.html\" title=\"struct haar_lib::math::ntt::NTT\">NTT</a>&lt;P, PRIM_ROOT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#146-148\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","haar_lib::math::ntt::NTT998244353"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NTT%3CP,+PRIM_ROOT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#13-143\">Source</a><a href=\"#impl-NTT%3CP,+PRIM_ROOT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const P: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>, const PRIM_ROOT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>&gt; <a class=\"struct\" href=\"haar_lib/math/ntt/struct.NTT.html\" title=\"struct haar_lib::math::ntt::NTT\">NTT</a>&lt;P, PRIM_ROOT&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#15-37\">Source</a><h4 class=\"code-header\">pub fn <a href=\"haar_lib/math/ntt/struct.NTT.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p><a href=\"haar_lib/math/ntt/struct.NTT.html\" title=\"struct haar_lib::math::ntt::NTT\"><code>NTT&lt;P, PRIM_ROOT&gt;</code></a>を作る。</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ntt\" class=\"method\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#40-42\">Source</a><h4 class=\"code-header\">pub fn <a href=\"haar_lib/math/ntt/struct.NTT.html#tymethod.ntt\" class=\"fn\">ntt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;P&gt;&gt;)</h4></section></summary><div class=\"docblock\"><p>数論変換を行う。</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intt\" class=\"method\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#45-47\">Source</a><h4 class=\"code-header\">pub fn <a href=\"haar_lib/math/ntt/struct.NTT.html#tymethod.intt\" class=\"fn\">intt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;P&gt;&gt;)</h4></section></summary><div class=\"docblock\"><p><code>ntt</code>の逆変換を行う。</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.convolve\" class=\"method\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#94-118\">Source</a><h4 class=\"code-header\">pub fn <a href=\"haar_lib/math/ntt/struct.NTT.html#tymethod.convolve\" class=\"fn\">convolve</a>(\n    &amp;self,\n    f: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;P&gt;&gt;,\n    g: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;P&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;P&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>2つの<code>Vec</code>を畳み込む。</p>\n<p>$(f \\ast g)(k) = \\sum_{k = i + j} f(i) \\times g(j)$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.convolve_same\" class=\"method\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#121-137\">Source</a><h4 class=\"code-header\">pub fn <a href=\"haar_lib/math/ntt/struct.NTT.html#tymethod.convolve_same\" class=\"fn\">convolve_same</a>(&amp;self, f: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;P&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"haar_lib/num/const_modint/struct.ConstModInt.html\" title=\"struct haar_lib::num::const_modint::ConstModInt\">ConstModInt</a>&lt;P&gt;&gt;</h4></section></summary><div class=\"docblock\"><p><code>convolve(f.clone(), f)</code>と同等。</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_size\" class=\"method\"><a class=\"src rightside\" href=\"src/haar_lib/math/ntt.rs.html#140-142\">Source</a><h4 class=\"code-header\">pub fn <a href=\"haar_lib/math/ntt/struct.NTT.html#tymethod.max_size\" class=\"fn\">max_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>NTTで変換可能な配列の最大長を返す。</p>\n</div></details></div></details>",0,"haar_lib::math::ntt::NTT998244353"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[7342]}